(this["webpackJsonpreact-moment-timezone-poc"]=this["webpackJsonpreact-moment-timezone-poc"]||[]).push([[0],{59:function(e,a,l){},69:function(e,a,l){"use strict";l.r(a);var i=l(0),n=l.n(i),t=l(9),r=l.n(t),s=(l(59),l(23)),o=l(42),c=l.n(o),u=l(48),b=l(99),d=l(102),m=l(104),h=l(105),C=l(106),v=l(107),T=l(113),j=l(112),U=l(114),A=l(108),g=l(109),f=l(110),p=l(111),x=[{label:"(UTC-12:00) International Date Line West",value:"Etc/GMT+12"},{label:"(UTC-11:00) Coordinated Universal Time-11",value:"Etc/GMT+11"},{label:"(UTC-10:00) Hawaii",value:"Pacific/Honolulu"},{label:"(UTC-09:00) Alaska",value:"America/Anchorage"},{label:"(UTC-08:00) Baja California",value:"America/Santa_Isabel"},{label:"(UTC-08:00) Pacific Time (US and Canada)",value:"America/Los_Angeles"},{label:"(UTC-07:00) Chihuahua, La Paz, Mazatlan",value:"America/Chihuahua"},{label:"(UTC-07:00) Arizona",value:"America/Phoenix"},{label:"(UTC-07:00) Mountain Time (US and Canada)",value:"America/Denver"},{label:"(UTC-06:00) Central America",value:"America/Guatemala"},{label:"(UTC-06:00) Central Time (US and Canada)",value:"America/Chicago"},{label:"(UTC-06:00) Saskatchewan",value:"America/Regina"},{label:"(UTC-06:00) Guadalajara, Mexico City, Monterey",value:"America/Mexico_City"},{label:"(UTC-05:00) Bogota, Lima, Quito",value:"America/Bogota"},{label:"(UTC-05:00) Indiana (East)",value:"America/Indiana/Indianapolis"},{label:"(UTC-05:00) Eastern Time (US and Canada)",value:"America/New_York"},{label:"(UTC-04:30) Caracas",value:"America/Caracas"},{label:"(UTC-04:00) Atlantic Time (Canada)",value:"America/Halifax"},{label:"(UTC-04:00) Asuncion",value:"America/Asuncion"},{label:"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",value:"America/La_Paz"},{label:"(UTC-04:00) Cuiaba",value:"America/Cuiaba"},{label:"(UTC-04:00) Santiago",value:"America/Santiago"},{label:"(UTC-03:30) Newfoundland",value:"America/St_Johns"},{label:"(UTC-03:00) Brasilia",value:"America/Sao_Paulo"},{label:"(UTC-03:00) Greenland",value:"America/Godthab"},{label:"(UTC-03:00) Cayenne, Fortaleza",value:"America/Cayenne"},{label:"(UTC-03:00) Buenos Aires",value:"America/Argentina/Buenos_Aires"},{label:"(UTC-03:00) Montevideo",value:"America/Montevideo"},{label:"(UTC-02:00) Coordinated Universal Time-2",value:"Etc/GMT+2"},{label:"(UTC-01:00) Cape Verde",value:"Atlantic/Cape_Verde"},{label:"(UTC-01:00) Azores",value:"Atlantic/Azores"},{label:"(UTC+00:00) Casablanca",value:"Africa/Casablanca"},{label:"(UTC+00:00) Monrovia, Reykjavik",value:"Atlantic/Reykjavik"},{label:"(UTC+00:00) Dublin, Edinburgh, Lisbon, London",value:"Europe/London"},{label:"(UTC+00:00) Coordinated Universal Time",value:"Etc/GMT"},{label:"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",value:"Europe/Berlin"},{label:"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",value:"Europe/Paris"},{label:"(UTC+01:00) West Central Africa",value:"Africa/Lagos"},{label:"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",value:"Europe/Budapest"},{label:"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",value:"Europe/Warsaw"},{label:"(UTC+01:00) Windhoek",value:"Africa/Windhoek"},{label:"(UTC+02:00) Athens, Bucharest, Istanbul",value:"Europe/Istanbul"},{label:"(UTC+02:00) Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius",value:"Europe/Kiev"},{label:"(UTC+02:00) Cairo",value:"Africa/Cairo"},{label:"(UTC+02:00) Damascus",value:"Asia/Damascus"},{label:"(UTC+02:00) Amman",value:"Asia/Amman"},{label:"(UTC+02:00) Harare, Pretoria",value:"Africa/Johannesburg"},{label:"(UTC+02:00) Jerusalem",value:"Asia/Jerusalem"},{label:"(UTC+02:00) Beirut",value:"Asia/Beirut"},{label:"(UTC+03:00) Baghdad",value:"Asia/Baghdad"},{label:"(UTC+03:00) Minsk",value:"Europe/Minsk"},{label:"(UTC+03:00) Kuwait, Riyadh",value:"Asia/Riyadh"},{label:"(UTC+03:00) Nairobi",value:"Africa/Nairobi"},{label:"(UTC+03:30) Tehran",value:"Asia/Tehran"},{label:"(UTC+04:00) Moscow, St. Petersburg, Volgograd",value:"Europe/Moscow"},{label:"(UTC+04:00) Tbilisi",value:"Asia/Tbilisi"},{label:"(UTC+04:00) Yerevan",value:"Asia/Yerevan"},{label:"(UTC+04:00) Abu Dhabi, Muscat",value:"Asia/Dubai"},{label:"(UTC+04:00) Baku",value:"Asia/Baku"},{label:"(UTC+04:00) Port Louis",value:"Indian/Mauritius"},{label:"(UTC+04:30) Kabul",value:"Asia/Kabul"},{label:"(UTC+05:00) Tashkent",value:"Asia/Tashkent"},{label:"(UTC+05:00) Islamabad, Karachi",value:"Asia/Karachi"},{label:"(UTC+05:30) Sri Jayewardenepura Kotte",value:"Asia/Colombo"},{label:"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",value:"Asia/Calcutta"},{label:"(UTC+05:45) Kathmandu",value:"Asia/Kathmandu"},{label:"(UTC+06:00) Astana",value:"Asia/Almaty"},{label:"(UTC+06:00) Dhaka",value:"Asia/Dhaka"},{label:"(UTC+06:00) Yekaterinburg",value:"Asia/Yekaterinburg"},{label:"(UTC+06:30) Yangon",value:"Asia/Yangon"},{label:"(UTC+07:00) Bangkok, Hanoi, Jakarta",value:"Asia/Bangkok"},{label:"(UTC+07:00) Novosibirsk",value:"Asia/Novosibirsk"},{label:"(UTC+08:00) Krasnoyarsk",value:"Asia/Krasnoyarsk"},{label:"(UTC+08:00) Ulaanbaatar",value:"Asia/Ulaanbaatar"},{label:"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",value:"Asia/Shanghai"},{label:"(UTC+08:00) Perth",value:"Australia/Perth"},{label:"(UTC+08:00) Kuala Lumpur, Singapore",value:"Asia/Singapore"},{label:"(UTC+08:00) Taipei",value:"Asia/Taipei"},{label:"(UTC+09:00) Irkutsk",value:"Asia/Irkutsk"},{label:"(UTC+09:00) Seoul",value:"Asia/Seoul"},{label:"(UTC+09:00) Osaka, Sapporo, Tokyo",value:"Asia/Tokyo"},{label:"(UTC+09:30) Darwin",value:"Australia/Darwin"},{label:"(UTC+09:30) Adelaide",value:"Australia/Adelaide"},{label:"(UTC+10:00) Hobart",value:"Australia/Hobart"},{label:"(UTC+10:00) Yakutsk",value:"Asia/Yakutsk"},{label:"(UTC+10:00) Brisbane",value:"Australia/Brisbane"},{label:"(UTC+10:00) Guam, Port Moresby",value:"Pacific/Port_Moresby"},{label:"(UTC+10:00) Canberra, Melbourne, Sydney",value:"Australia/Sydney"},{label:"(UTC+11:00) Vladivostok",value:"Asia/Vladivostok"},{label:"(UTC+11:00) Solomon Islands, New Caledonia",value:"Pacific/Guadalcanal"},{label:"(UTC+12:00) Coordinated Universal Time+12",value:"Etc/GMT-12"},{label:"(UTC+12:00) Fiji, Marshall Islands",value:"Pacific/Fiji"},{label:"(UTC+12:00) Magadan",value:"Asia/Magadan"},{label:"(UTC+12:00) Auckland, Wellington",value:"Pacific/Auckland"},{label:"(UTC+13:00) Nuku'alofa",value:"Pacific/Tongatapu"},{label:"(UTC+13:00) Samoa",value:"Pacific/Apia"}],O=l(4),y=Object(b.a)((function(e){return{root:{display:"flex",justifyContent:"center",alignItems:"center"},heroContent:{padding:e.spacing(4)},alignCenter:{textAlign:"center"},flexAlignCenter:{display:"flex",justifyContent:"center"},formControl:{minWidth:"33%",color:"#fff"},redFont:{color:"red"},blueFont:{color:"blue"}}})),k=function(){var e=Object(i.useState)("Pacific/Auckland"),a=Object(s.a)(e,2),l=a[0],n=a[1],t=Object(i.useState)(""),r=Object(s.a)(t,2),o=r[0],b=r[1],k=Object(i.useState)(Date.now()),S=Object(s.a)(k,2),z=S[0],B=S[1],M=y(),w=Object(i.useRef)(null);return Object(i.useEffect)((function(){var e,a;if(l){var i=(e=z,a=l,c.a.tz(e,a).format("M/D/YYYY hh:mm:ss A"));b(i)}}),[z,l]),Object(i.useEffect)((function(){var e;if(w&&w.current){var a=["underline","box","circle","highlight"],l=a[Math.floor(Math.random()*a.length)];(e=Object(u.a)(w.current,{type:l,color:"#FFD54F"})).show()}return function(){e&&e.remove()}}),[o]),Object(O.jsxs)(O.Fragment,{children:[Object(O.jsx)(d.a,{}),Object(O.jsx)("main",{className:M.root,children:Object(O.jsxs)("div",{children:[Object(O.jsx)("div",{className:M.heroContent,children:Object(O.jsxs)(m.a,{maxWidth:"md",children:[Object(O.jsx)(h.a,{component:"h1",variant:"h2",align:"center",color:"textPrimary",gutterBottom:!0,children:"React + Moment.js Timezone POC"}),Object(O.jsx)(h.a,{variant:"h6",align:"center",color:"textPrimary",paragraph:!0,children:'This POC demonstrates the usage of "moment.js + moment-timezone.js" library along with react.'}),Object(O.jsxs)("ul",{children:[Object(O.jsx)("li",{children:"When any dates in your application must be shown according to the user's specified timezones rather than the user's system timezone."}),Object(O.jsx)("li",{children:'Assume your user is from "Brisbane, Australia," and his or her system\'s default timezone is "(UTC + 10:00) Brisbane." Let\'s pretend he or she uses your app, but for whatever reason, he or she wishes to view any dates presented in your app in the "(UTC + 12:00) Auckland, Wellington" timezone.'}),Object(O.jsx)("li",{children:"In this scenario, you may use this poc to learn how to display dates based on the user's timezone selection."})]})]})}),Object(O.jsx)(m.a,{maxWidth:"md",children:Object(O.jsxs)(C.a,{container:!0,spacing:8,children:[Object(O.jsx)(C.a,{item:!0,xs:12,sm:12,md:12,className:M.flexAlignCenter,children:Object(O.jsxs)(v.a,{className:M.formControl,children:[Object(O.jsx)(T.a,{id:"timezone",children:"Timezone"}),Object(O.jsxs)(j.a,{labelId:"timezone",name:"selectedTimezone",value:l,onChange:function(e){var a=e.target.value;n(a)},children:[Object(O.jsx)(U.a,{value:"",disabled:!0,children:"Select Timezone"}),x.map((function(e){return Object(O.jsx)(U.a,{value:e.value,children:e.label},e.value)}))]})]})}),Object(O.jsx)(C.a,{item:!0,xs:12,sm:12,md:6,children:Object(O.jsxs)(A.a,{children:[Object(O.jsxs)(g.a,{children:[Object(O.jsxs)(h.a,{gutterBottom:!0,variant:"h6",component:"h4",className:M.alignCenter,children:["Current time as per",Object(O.jsx)("strong",{className:M.redFont,children:"\xa0System's\xa0"}),"timezone"]}),Object(O.jsxs)(h.a,{className:M.alignCenter,children:["Current Time : ",new Date(z).toLocaleString("en-US")]}),Object(O.jsxs)("ul",{children:[Object(O.jsx)("li",{children:"This time is displayed based on your system's timezone."}),Object(O.jsxs)("li",{children:["If you change your system's timezone, this time ",Object(O.jsx)("strong",{children:"WILL"})," change."]}),Object(O.jsxs)("li",{children:["If you change timezone from dropdown, this time ",Object(O.jsx)("strong",{children:"WILL NOT"})," change."]})]})]}),Object(O.jsx)(f.a,{children:Object(O.jsx)(p.a,{size:"small",color:"primary",onClick:function(){return B(Date.now())},children:"Click here to see updated date value after changing your system's timezone"})})]})}),Object(O.jsx)(C.a,{item:!0,xs:12,sm:12,md:6,children:Object(O.jsx)(A.a,{children:Object(O.jsx)(g.a,{children:l&&o?Object(O.jsxs)(O.Fragment,{children:[Object(O.jsxs)(h.a,{gutterBottom:!0,variant:"h6",component:"h4",className:M.alignCenter,children:["Current time as per",Object(O.jsx)("strong",{className:M.blueFont,children:"\xa0Selected\xa0"}),"timezone"]}),Object(O.jsxs)(h.a,{className:M.alignCenter,ref:w,children:["Current Time : ",o]}),Object(O.jsxs)("ul",{children:[Object(O.jsx)("li",{children:"This time is displayed based on your selected timezone from the dropdown."}),Object(O.jsxs)("li",{children:["If you change timezone from dropdown, this time ",Object(O.jsx)("strong",{children:"WILL"})," change."]}),Object(O.jsxs)("li",{children:["If you change your system's timezone, this time ",Object(O.jsx)("strong",{children:"WILL NOT"})," change."]})]})]}):Object(O.jsx)(h.a,{gutterBottom:!0,variant:"h6",component:"h4",className:M.alignCenter,children:"To view the difference, please choose any timezone first."})})})})]})})]})})]})},S=function(e){e&&e instanceof Function&&l.e(3).then(l.bind(null,116)).then((function(a){var l=a.getCLS,i=a.getFID,n=a.getFCP,t=a.getLCP,r=a.getTTFB;l(e),i(e),n(e),t(e),r(e)}))};r.a.render(Object(O.jsx)(n.a.StrictMode,{children:Object(O.jsx)(k,{})}),document.getElementById("root")),S()}},[[69,1,2]]]);
//# sourceMappingURL=main.f033572b.chunk.js.map